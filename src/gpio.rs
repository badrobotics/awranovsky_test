#![no_std]

use volatile_register::{RW, RO, WO};

#[repr(C)]
pub struct Gpio {
    pub GPIODATA: RW<u32>,
    Reserved0: [RO<u32>; 255],
    pub GPIODIR: RW<u32>,
    pub GPIOIS: RW<u32>,
    pub GPIOIBE: RW<u32>,
    pub GPIOIEV: RW<u32>,
    pub GPIOIM: RW<u32>,
    pub GPIORIS: RO<u32>,
    pub GPIOMIS: RO<u32>,
    pub GPIOICR: WO<u32>,
    pub GPIOAFSEL: RW<u32>,
    Reserved1: [RO<u32>; 55],
    pub GPIODR2R: RW<u32>,
    pub GPIODR4R: RW<u32>,
    pub GPIODR8R: RW<u32>,
    pub GPIOODR: RW<u32>,
    pub GPIOPUR: RW<u32>,
    pub GPIOPDR: RW<u32>,
    pub GPIOSLR: RW<u32>,
    pub GPIODEN: RW<u32>,
    pub GPIOLOCK: RW<u32>,
    pub GPIOCR: WO<u32>,
    pub GPIOAMSEL: RW<u32>,
    pub GPIOPCTL: RW<u32>,
    pub GPIOADCCTL: RW<u32>,
    pub GPIODMACTL: RW<u32>,
    pub GPIOSI: RW<u32>,
    pub GPIODR12R: RW<u32>,
    pub GPIOWAKEPEN: RW<u32>,
    pub GPIOWAKELVL: RW<u32>,
    pub GPIOWAKESTAT: RO<u32>,
    Reserved2: [RO<u32>; 669],
    pub GPIOPP: RO<u32>,
    pub GPIOPC: RW<u32>,
    Reserved3: [RO<u32>; 2],
    pub GPIOPeriphID4: RO<u32>,
    pub GPIOPeriphID5: RO<u32>,
    pub GPIOPeriphID6: RO<u32>,
    pub GPIOPeriphID7: RO<u32>,
    pub GPIOPeriphID0: RO<u32>,
    pub GPIOPeriphID1: RO<u32>,
    pub GPIOPeriphID2: RO<u32>,
    pub GPIOPeriphID3: RO<u32>,
    pub GPIOPCellID0: RO<u32>,
    pub GPIOPCellID1: RO<u32>,
    pub GPIOPCellID2: RO<u32>,
    pub GPIOPCellID3: RO<u32>,
}

